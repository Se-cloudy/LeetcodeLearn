'''
137. 只出现一次的数字 II
中等
给你一个整数数组 nums ，除某个元素仅出现 一次 外，其余每个元素都恰出现 三次 。请你找出并返回那个只出现了一次的元素。
你必须设计并实现线性时间复杂度的算法且使用常数级空间来解决此问题。

示例 1：
输入：nums = [2,2,3,2]
输出：3
示例 2：
输入：nums = [0,1,0,1,0,1,99]
输出：99
'''

# 抄的。统计32位int每一位的贡献。太妙了。每一个二进制数位的“贡献”，和“计数”的概念，很有用。
'''
都在说用异或等等的，提供另外一种容易理解的思路，将每个数想象成32位的二进制，对于每一位的二进制的1和0累加起来必然是3N或者3N+1， 
为3N代表目标值在这一位没贡献，3N+1代表目标值在这一位有贡献(=1)，然后将所有有贡献的位|起来就是结果。
这样做的好处是如果题目改成K个一样，只需要把代码改成cnt%k，很通用
'''
nums = [4, 2, 4, 2, 4, 2, 99]
ret = 0
for i in range(32):
    mask = 1 << i # 左移i位；数值意义是乘以2^i
    cnt = 0
    for j in range(len(nums)):
        if nums[j] & mask != 0:  # 检验第i位是否为1
            cnt += 1
    if cnt % 3 != 0:
        ret |= mask  # ret的第i位赋值为1
print(ret)
